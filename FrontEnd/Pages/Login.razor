@page "/Login"
@*layout EmptyLayout*@

@inject IAuthService authService 
@inject NavigationManager navigationManager

<section id="cover" class="min-vh-100">
    <div id="cover-caption">
        <div class="container">
            <div class="row">
                <div class="col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto form p-4">
                    @if (loginFailed)
                    {
                        <div class="alert alert-danger">Your credentials did not work. Please try again.</div>
                    }
                    @if (isLoading)
                    {
                        <div class="alert alert-info">Please wait...</div>
                    }

                    <div class="card">

                        <div class="card-header">
                            Login Form
                        </div>

                        <div class="card-body">

                            <EditForm @ref="loginForm" Model=@userInfo OnValidSubmit=@ValidFormSubmitted OnInvalidSubmit=@InvalidFormSubmitted>
                                <DataAnnotationsValidator />

                                <ValidationSummary />

                                <div class="form-group">
                                    <label for="Name">Email</label>
                                    <InputText type="email" id="Email" class="form-control" @bind-Value="userInfo.Email" />
                                </div>

                                <div class="form-group">
                                    <label for="Password">Password</label>
                                    <InputText type="password" id="Email" class="form-control" @bind-Value="userInfo.Password" />
                                </div>


                                <input type="submit" class="btn btn-primary" value="Login" />
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    UserInfo userInfo = new UserInfo();
    LoginResult result = new LoginResult();
    EditForm loginForm = new EditForm();
    private bool loginFailed { get; set; } = false;
    private bool isLoading { get; set; } = false;

    private async Task ValidFormSubmitted()
    {
        try
        {
            isLoading = true;
            await authService.Login(userInfo);
            loginFailed = false;
            this.StateHasChanged();
            navigationManager.NavigateTo("/");

        }
        catch (Exception ex)
        {
            loginFailed = true;
        }
    }

    private async Task InvalidFormSubmitted()
    {

    }



}